name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
    - uses: actions/checkout@v2
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true

    - name: Build
      run: cargo build --release --target ${{ matrix.target }}

    - name: Package Binary
      run: |
        cd target/${{ matrix.target }}/release
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          7z a ../../../rust-dockerize-${{ matrix.target }}.zip rust-dockerize.exe
        else
          tar czf ../../../rust-dockerize-${{ matrix.target }}.tar.gz rust-dockerize
        fi
      shell: bash

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        files: |
          rust-dockerize-${{ matrix.target }}.*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 